input         clk_llc2;      // 13.5 MHz		//비디오 디코딩을 위한 (시스템클럭)/2 값	한주기에 1픽셀
input         clk_llc;       // 27 MHz			//시스템 클럭
input         vref;          // vertical sync.		//수직선	한주기에 240라인
input         href;          // horizontal sync.	//수평선	한주기에 1라인(720픽셀)
input         odd;           // odd field (RTS0) 	//홀수선과 짝수선 구분하는 신호

wire clk_llc8  = clk_div[1];		//clk2 클락을 1/4 해서 clk_llc8을 만듦 (주기가 4배)

href2 <= ~href2;	//href 클락을 조금 바꿈

wire oddframe   = odd & vref;	//홀수 부분과 실제 사용하는 verf를 and연산 -> 홀수부분의 240line 범위 

wire href2_wr   = href2 & href & oddframe;// & oddframe2; 	
//herf2와 herf and연산 = href를 1/2함 => oddframe과 and연산 => 홀수부분만 사용 = 홀수부분 120line

wire vpo_wrx    = ~(vref & href2_wr & clk_llc8);	//180x120 write clock generation 

wire vd_wrx    = ~(~vpo_wrxd1 & vpo_wrxd3);	//글리치가 생기지 않기위한 딜레이된 클럭 (?? 먼소리지)

wire [15:0] DecVData = {R,G,B};		//RGB(5,6,5) 합친거

reg [15:0] vdata;		// SRAM 저장 데이터
reg [15:0] vadr;		// SRAM 저장 주소
